" color configuration
colorscheme gruvbox " 设置主题
let g:gruvbox_contrast_dark='hard'
set background=dark
" airline
let g:airline#extensions#tabline#enabled = 1                " 设置开启tab样式
let g:airline#extensions#tabline#formatter = 'jsformatter'  " 设置默认tab栏样式
let g:airline_theme='base16_gruvbox_dark_hard'

let g:airline_section_z='%l/%L'
let g:airline#extensions#tabline#buffer_nr_show = 1        "显示buffer编号
let g:airline#extensions#tabline#buffer_nr_format = '%s:'

let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline#extensions#tabline#left_sep = ''

" indent
set tabstop=4
set shiftwidth=4
set expandtab
set smarttab
" search
set hlsearch        " 高亮查找匹配
set incsearch       " 搜索逐字符高亮
set showmatch       " 显示匹配
set ignorecase      " 搜索忽略大小写
set smartindent     " 智能缩进
" apparence
set number          " 显示行号
set cursorline      " 高亮当前行
set sm              " 显示括号配对情况
set autoindent      " 自动对齐
set ruler           " 显示标尺,就是在右下角显示光标位置
set laststatus=2    " 启动显示状态行,最下面的高亮行
set showcmd         " 显示输入的命令
" edit
syntax on           " 高亮显示
set autochdir       " 自动切换工作目录
set autoread        " 文件自动检测外部更改
set confirm         " 没有保存或文件只读时弹出确认
set encoding=utf-8  " 设置编码
set nobackup        " 不需要备份
set backspace=2     " 使回格键（backspace）正常处理indent, eol, start等
set noerrorbells    " 出错时，不要发出响声
set wildmenu        " 使用Tab进行补全，类似which-key
set wildmode=longest:list,full
" other
set mouse=a         " 使用鼠标
set modelines=0     " CVE-2007-2438
set nocompatible    " 去掉讨厌的有关vi一致性模式，避免以前版本的一些bug和局限
set clipboard=unnamed          " 共享剪切板
autocmd InsertEnter * se cul   " 用浅色高亮当前行
let skip_defaults_vim=1
set nowritebackup nobackup

" file
filetype plugin on  " 允许插件
filetype on         " 侦测文件类型
filetype plugin indent on  " 文件类型检测

" map
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
inoremap <Tab> <C-x><C-o>
nnoremap <space>tt :NERDTreeToggle<CR>
nmap ss <Plug>(easymotion-sn)
nmap <F8> :TagbarToggle<CR>

call plug#begin()
" dashboard
Plug 'mhinz/vim-startify'
" theme
Plug 'morhetz/gruvbox'
" statusline
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
" tree
Plug 'scrooloose/nerdtree'
" search
Plug 'easymotion/vim-easymotion'
Plug 'kien/ctrlp.vim'
"
Plug 'jiangmiao/auto-pairs'
Plug 'tpope/vim-commentary'
" code
Plug 'neoclide/coc.nvim', {'branch': 'release'}

call plug#end()

" coc settings
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <cr> coc#pum#visible() ? coc#pum#confirm() : "\<CR>"
